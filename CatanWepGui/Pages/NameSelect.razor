@page "/NameSelect/{Playernum:int}"
@using Catan.MainGame.MainGameloop
@inject NavigationManager _nav
@inject IJSRuntime JS

<main>
    <h1>Spieler konfigurieren:</h1>
    <section>
    @for (int i = 0; i < Playernum; i++) {
        Player CurrentPlayer = Players.PlayerList[i];
        string[] ids = ["a", "b", "c", "d"];
        <span>

            <EditForm Model="CurrentPlayer" OnSubmit="() => Submit(i)" Form Name="PlayerCreator" id="form" class="@ids[i]" @ref="editFormRef">
                @switch (classes) {
                    case "a": {
                        <a>Player 1</a>
                        break;
                    }
                    case "b": {
                        <a>Player 2</a>
                        break;

                    }
                    case "c": {
                        <a>Player 3</a>
                        break;

                    }
                    case "d": {
                        <a>Player 4</a>
                        break;

                    }
                    default:
                        <a>oash</a>
                        break;
                }
                <div>
                    <label id="label">
                        <a>Username:</a>
                        <InputText @bind-Value="CurrentPlayer.Name"/>
                    </label>
                </div>
                <div>
                    <label id="label">
                        <a>Color:</a>
                        <InputText @bind-Value="CurrentPlayer.Color"/>
                    </label>
                </div>
                <div>
                    <button type="submit" id="submitbutton" >Submit</button>
                </div>
            </EditForm>
            @GetClass()
    </span>
        
    }
    </section>
    
    
    <!--Css Aber in Arsch-->
    <style>
    #form{
        border: 2px solid #555555;
        border-radius: 5px;
        margin-bottom: 10px;
        width: 500px;
        padding: 5px
    }
    label{ 
        margin-bottom: 5px;
    }
    .a{
        background-color: @Players.PlayerList[0].Color;
    }
    .b{
        background-color: blue;
    }
    .c{
        background-color: green;
    }
    section{
        display: flex;  
        flex-wrap: wrap;
        height: 500px;
    }
    h4{
        font-family: "EB Garamond", b;
        color: #555555;

    }
    </style>
    
    
</main>

@code {
    [Parameter]
    public int Playernum { get; set; }
    public EditForm editFormRef;
    public int PlayersLeft { get; set; }
    public string classes { get; set; }
    protected override void OnInitialized() {
        PlayersLeft = Playernum-1;
    }

    
    public void Submit(int num) {
        Console.WriteLine(Players.PlayerList[num].Active);
        Console.WriteLine(Players.PlayerList[0].Active);
        Console.WriteLine(Players.PlayerList[1].Active);
        Console.WriteLine(Players.PlayerList[2].Active);
        Console.WriteLine(Players.PlayerList[3].Active);
        Console.WriteLine("----------------------------");
        if (Players.PlayerList[num].Active == false) {
            if (PlayersLeft == 0) {
                string uri = string.Format("/MainGame?username1={0}&color1={1}&active1={2}&username2={3}&color2={4}&active2={5}&username3={6}&color3={7}&active3={8}&username4={9}&color4={10}&active4={11}", Players.PlayerList[0].Name, Players.PlayerList[0].Color, Players.PlayerList[0].Active, Players.PlayerList[1].Name, Players.PlayerList[1].Color, Players.PlayerList[1].Active, Players.PlayerList[2].Name, Players.PlayerList[2].Color, Players.PlayerList[2].Active, Players.PlayerList[3].Name, Players.PlayerList[3].Color, Players.PlayerList[3].Active);
                _nav.NavigateTo(uri);
            }
            else {
                PlayersLeft--;
                Players.PlayerList[num].Active = true;
            }
        }
        
    }
    
    public async Task GetClass()
    {
        for (int i = 0; i < 4; i++) {
            
            classes = await JS.InvokeAsync<string>("getElementClass", editFormRef);
            

        }
    }
}